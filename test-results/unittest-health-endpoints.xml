<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="21" time="7.981" timestamp="2025-08-07T12:25:40.880797-04:00" hostname="Mac.lan"><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_root_endpoint_returns_service_info" time="0.046" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_root_endpoint_includes_documentation" time="0.008" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_root_endpoint_includes_build_info" time="0.007" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_basic_health_endpoint_returns_200" time="0.008" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_basic_health_endpoint_timestamp_is_recent" time="0.007" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_basic_health_endpoint_includes_port" time="0.009" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_returns_200_when_healthy" time="0.008" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_reports_env_vars_status" time="0.008" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_reports_missing_deps_warnings" time="0.008" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_reports_service_checks" time="0.007" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_returns_503_when_missing_required_vars" time="0.007" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_includes_hostname" time="0.007" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_detailed_health_endpoint_checks_disk_space" time="0.007" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_all_health_endpoints_return_json_content_type" time="0.264" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_health_endpoints_handle_method_not_allowed" time="0.011" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_endpoints_are_consistent_with_version" time="0.090" /><testcase classname="unit.test_health_endpoints.TestHealthEndpoints" name="test_service_name_consistency" time="0.047" /><testcase classname="unit.test_health_endpoints.TestHealthEndpointsPerformance" name="test_basic_health_endpoint_responds_quickly" time="0.008" /><testcase classname="unit.test_health_endpoints.TestHealthEndpointsPerformance" name="test_detailed_health_endpoint_responds_reasonably" time="0.008"><failure message="assert 503 == 200&#10; +  where 503 = &lt;WrapperTestResponse streamed [503 SERVICE UNAVAILABLE]&gt;.status_code">tests/unit/test_health_endpoints.py:363: in test_detailed_health_endpoint_responds_reasonably
    assert response.status_code == 200
E   assert 503 == 200
E    +  where 503 = &lt;WrapperTestResponse streamed [503 SERVICE UNAVAILABLE]&gt;.status_code</failure></testcase><testcase classname="unit.test_health_endpoints.TestHealthEndpointsEdgeCases" name="test_health_endpoints_with_unicode_hostname" time="0.008"><failure message="assert 503 == 200&#10; +  where 503 = &lt;WrapperTestResponse streamed [503 SERVICE UNAVAILABLE]&gt;.status_code">tests/unit/test_health_endpoints.py:391: in test_health_endpoints_with_unicode_hostname
    assert response.status_code == 200
E   assert 503 == 200
E    +  where 503 = &lt;WrapperTestResponse streamed [503 SERVICE UNAVAILABLE]&gt;.status_code</failure></testcase><testcase classname="unit.test_health_endpoints.TestHealthEndpointsEdgeCases" name="test_health_endpoints_with_system_errors" time="0.008" /></testsuite></testsuites>